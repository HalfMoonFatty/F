1. Tell me about yourself

- I have been with Performance Engineering group for about 5 years, focused on analyzing and improving database and OS performance and I also work on tool development.
- I most recently worked on Oracle Cloud Service,“DBaaS”, and kernel optimization for Oracle database. 
- I have hands-on experience at systems level.




2. Why facebook (vs. other companies)?
    What feature of facebook do u like?  


Facebook is one of the most popular products in the world, with over 2 billion active users. This means there’s a very good chance the work 
at Facebook can have direct impacts to people. As a software engineer, that’s something very rewarding to think about, and motivates me a lot.

One of the Facebook features I love to use is the the second-hand market. I’m more confident to  buy things here because the sellers 
I deal with are either close friends, or people my friends know about. This unique “trust” feature is really only possible because of the 
underlying high-quality social network in Facebook. To me, this social network has unlimited potential to build useful products on top of. 
Second-hand market is just one example. I’m sure there are many more Facebook features I’m not aware of, and also new exciting feature coming up.

I came from a backend, server-side programming background. I believe I can make meaningful impacts quickly in any backend team in general. 
That said, I’m open to all positions. I believe I have good CS fundamentals and can pick up new technologies and frameworks quickly.





3. What would you do if you have different opinion with your colleague? - prepare details
    Have you ever had a conflict with the team? How was it resolved?


The first thing I do is to try to communicate as clear as I can. Often times confusions arise due to miscommunications rather than 
different opinions. If that didn’t work, I’ll try to think from the other person’s point of view, and try to understand his or her 
reasonings for objecting my proposals. This will often help me revise my proposal and subsequently follow up with the person. This 
is an iterative process that may even improve my original design and let me learn something new, so I’m actually happy to have people 
be critical for any technical decisions I make.

To give you an example, …





4. Where do you see yourself in five years?

In 5 years, I would like to develop into a strong engineer whose work influences well beyond myself. I hope to be able to own a complex 
project end to end, and be able to set technical directions and priorities for a few other engineers working with me on the same project.

I’m fairly confident with my CS fundamentals and coding skills, but I believe I will need to develop additional technical expertise early 
in my career in order to achieve my 5-year goal. This includes things like testing, productionization, monitoring, documentation, and many more. 
So beyond excelling at my own projects, I also hope to learn those skills from senior engineers, so I can quickly ramp up and achieve my long-term goal. 




5. What are your weaknesses?
   What are the areas where you need to improve your skills?
   Are there areas where you need to develop your skills further?


Several weaknesses I can think of (just say one if interviewer doesn’t ask you for more.):
I’m afraid to ask bad questions. But it’s often hard to justify whether a question is good or bad, so I often spend a lot of time to do 
research and try to figure out the problem by myself. Sometimes this can be inefficient -- it could take me a few hours to research and 
find the answer, but it might only take an expert a few minutes to explain to me directly. I have been trying to improve this throughout 
my career. There were also a few cases where my questions led to more sophisticated discussions with many senior level engineers, and even 
revealed potential design issues. So I would say I’m more confident to speak out nowadays than in the past, but I still see room for improvement.


I used get overwhelmed when I had too many different tasks at the same time. Unfortunately, in the past I sometimes had to sacrifice quality 
in order to meet deadlines. This is especially true when I was in school and early in my career. But throughout my 4+ years of work experience, 
I believe I’m much better at prioritizing tasks and planning ahead nowadays, and discuss with manager about my project plannings.





6. What do you like least about your previous job/internship?
    What do you dislike the most about your last job?
    What do you wish you had done differently at your previous company?
    What you have learned from the previous experience?


My currently job is too concentrated in one specific area, namely database performance and OS kernels, and it’s mostly focused on system-level 
programing. Sometimes it’s easy to get too deep into the project and forgot about the big picture. So for example, there isn’t much learning 
opportunities for web technologies and frontend systems. I hope to develop into a well-rounded engineer who knows how a product works end to end. 
I realize that I’m relatively weak on the front-end technologies, and I have been mostly studying these knowledge on my own, but unfortunately 
I didn’t have much hands-on experience. So I hope I can learn from my next job to fill in the gap.

Sometimes my project can be delayed due to other teams delays. One of my job duty was to analyze code, identify performance bottlenecks, 
design better algorithms to improve performance, and prototype the idea as a proof of concept. Sometimes, I have successfully demonstrated 
the improvements, with working prototypes. Ideally, the code owners should develop these improvements into the next release. But their team 
is under a different VP, and so they often have other priorities that postpone our proposals. They also have the policy of not letting 
external teams contribute to their codebase. So it’s frustrating to see that we did everything on our side, but the project doesn’t conclude 
until several quarters later due to delays from other teams.






7. What do u expect to learn from company?  / Which team of product u wanna go?

My previous job was too focused on system level programming. I would like to get exposed to the entire stack, that includes frontend and 
middleware systems. I really like the open culture at Facebook that encourages different teams to collaborate, and therefore help me learn 
all aspects of the tech stack.

I’m also interested to learn about the productionization and monitoring for services built at Facebook. Facebook has over 2 billion users 
nowadays and its system is quite robust. I think I can learn a lot about how to build fail-tolerant and high-available systems at Facebook.







What is your most challenging project / Have you ever do sth creative?

Describe a situation where you exceeded expectations/did more than required

Have you ever had an impossible project which has a very short deadline?

Have you ever simplify something?





My Question to the interviewer:
Does your team have oncalls? How heavy are the oncall workload?
What would you say is the most important skill to be successful here?
What is your favorite part of working here?


